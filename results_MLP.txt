MLP:

tuned_parameters = [{'hidden_layer_sizes': [(10,),(50,),(100,),(200,),(300,)], 'activation': ['logistic','tanh','relu'],
    					 'learning_rate': ['constant', 'adaptive'], 'learning_rate_init': [0.0005,0.001,0.003]
                        }]
scores = ['roc_auc']
clf = GridSearchCV(MLPClassifier(random_state = 42, alpha=1e-5, early_stopping=True), tuned_parameters, cv=2, scoring='%s' % score, n_jobs=-1, verbose=10)


Best parameters set found on development set:

{'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}

Grid scores on development set:

0.430 (+/-0.001) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.429 (+/-0.002) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.429 (+/-0.004) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.430 (+/-0.001) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.429 (+/-0.002) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.429 (+/-0.004) for {'activation': 'logistic', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.427 (+/-0.009) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.429 (+/-0.009) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.701 (+/-0.039) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.427 (+/-0.009) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.429 (+/-0.009) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.701 (+/-0.039) for {'activation': 'logistic', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.421 (+/-0.006) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.583 (+/-0.301) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.604 (+/-0.272) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.421 (+/-0.006) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.583 (+/-0.301) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.604 (+/-0.272) for {'activation': 'logistic', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.446 (+/-0.004) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.722 (+/-0.029) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.724 (+/-0.036) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.446 (+/-0.004) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.722 (+/-0.029) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.724 (+/-0.036) for {'activation': 'logistic', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.440 (+/-0.005) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.718 (+/-0.029) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.718 (+/-0.023) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.440 (+/-0.005) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.718 (+/-0.029) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.718 (+/-0.023) for {'activation': 'logistic', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.444 (+/-0.000) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.445 (+/-0.002) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.558 (+/-0.215) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.444 (+/-0.000) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.445 (+/-0.002) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.558 (+/-0.215) for {'activation': 'tanh', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.571 (+/-0.219) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.679 (+/-0.003) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.642 (+/-0.058) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.571 (+/-0.219) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.679 (+/-0.003) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.642 (+/-0.058) for {'activation': 'tanh', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.588 (+/-0.262) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.616 (+/-0.201) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.678 (+/-0.090) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.588 (+/-0.262) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.616 (+/-0.201) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.678 (+/-0.090) for {'activation': 'tanh', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.708 (+/-0.025) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.707 (+/-0.022) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.703 (+/-0.033) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.708 (+/-0.025) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.707 (+/-0.022) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.703 (+/-0.033) for {'activation': 'tanh', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.665 (+/-0.056) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.697 (+/-0.026) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.678 (+/-0.000) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.665 (+/-0.056) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.697 (+/-0.026) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.678 (+/-0.000) for {'activation': 'tanh', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.440 (+/-0.003) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.555 (+/-0.237) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.693 (+/-0.034) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.440 (+/-0.003) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.555 (+/-0.237) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.693 (+/-0.034) for {'activation': 'relu', 'hidden_layer_sizes': (10,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.687 (+/-0.007) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.573 (+/-0.229) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.592 (+/-0.006) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.687 (+/-0.007) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.573 (+/-0.229) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.592 (+/-0.006) for {'activation': 'relu', 'hidden_layer_sizes': (50,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.580 (+/-0.280) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.599 (+/-0.239) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.676 (+/-0.088) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.580 (+/-0.280) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.599 (+/-0.239) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.676 (+/-0.088) for {'activation': 'relu', 'hidden_layer_sizes': (100,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.708 (+/-0.029) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.704 (+/-0.030) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.705 (+/-0.022) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.708 (+/-0.029) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.704 (+/-0.030) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.705 (+/-0.022) for {'activation': 'relu', 'hidden_layer_sizes': (200,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
0.700 (+/-0.015) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.0005}
0.697 (+/-0.018) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.001}
0.686 (+/-0.009) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'constant', 'learning_rate_init': 0.003}
0.700 (+/-0.015) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.0005}
0.697 (+/-0.018) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.001}
0.686 (+/-0.009) for {'activation': 'relu', 'hidden_layer_sizes': (300,), 'learning_rate': 'adaptive', 'learning_rate_init': 0.003}
